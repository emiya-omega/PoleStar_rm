ARM GAS  /tmp/ccEI7gWE.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 4572726F 		.ascii	"Error_Handler\015\000"
  21      725F4861 
  21      6E646C65 
  21      720D00
  22              		.section	.text.Error_Handler,"ax",%progbits
  23              		.align	1
  24              		.global	Error_Handler
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	Error_Handler:
  30              	.LFB70:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "fatfs.h"
  23:Core/Src/main.c **** #include "i2s.h"
  24:Core/Src/main.c **** #include "sdio.h"
  25:Core/Src/main.c **** #include "usart.h"
ARM GAS  /tmp/ccEI7gWE.s 			page 2


  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** #include "wave.h"
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 	uint8_t res;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
ARM GAS  /tmp/ccEI7gWE.s 			page 3


  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_DMA_Init();
  97:Core/Src/main.c ****   MX_SDIO_SD_Init();
  98:Core/Src/main.c ****   MX_USART1_UART_Init();
  99:Core/Src/main.c ****   MX_I2S2_Init();
 100:Core/Src/main.c ****   MX_USART2_UART_Init();
 101:Core/Src/main.c ****   MX_FATFS_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****  if(retSD == 0){
 104:Core/Src/main.c **** 		printf("MX_FATFS_Init OK\r\n");
 105:Core/Src/main.c **** 		if(f_mount(&SDFatFS, (TCHAR const*)SDPath, 0) != FR_OK){
 106:Core/Src/main.c **** 			printf("f_mount failed\r\n");
 107:Core/Src/main.c **** 			while(1);
 108:Core/Src/main.c **** 		}else{
 109:Core/Src/main.c **** 			ScanWavefiles("0:/music");      
 110:Core/Src/main.c **** 		}
 111:Core/Src/main.c **** 	}
 112:Core/Src/main.c ****   /* USER CODE END 2 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Infinite loop */
 115:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 116:Core/Src/main.c ****   while (1)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     /* USER CODE END WHILE */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 121:Core/Src/main.c ****   }
 122:Core/Src/main.c ****   /* USER CODE END 3 */
 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /**
 126:Core/Src/main.c ****   * @brief System Clock Configuration
 127:Core/Src/main.c ****   * @retval None
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c **** void SystemClock_Config(void)
 130:Core/Src/main.c **** {
 131:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 133:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 136:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/ccEI7gWE.s 			page 4


 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2S2;
 164:Core/Src/main.c ****   PeriphClkInit.I2s2ClockSelection = RCC_I2S2CLKSOURCE_SYSCLK;
 165:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE END 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void Error_Handler(void)
 180:Core/Src/main.c **** {
  31              		.loc 1 180 1 view -0
  32              		.cfi_startproc
  33              		@ Volatile: function does not return.
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
 181:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 182:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 183:Core/Src/main.c ****   printf("Error_Handler\r\n");
  41              		.loc 1 183 3 view .LVU1
  42 0002 0248     		ldr	r0, .L4
  43 0004 FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccEI7gWE.s 			page 5


  44              	.LVL0:
 184:Core/Src/main.c ****   __disable_irq();
  45              		.loc 1 184 3 view .LVU2
  46              	.LBB4:
  47              	.LBI4:
  48              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccEI7gWE.s 			page 6


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccEI7gWE.s 			page 7


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  49              		.loc 2 140 27 view .LVU3
  50              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  51              		.loc 2 142 3 view .LVU4
  52              		.syntax unified
  53              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  54 0008 72B6     		cpsid i
  55              	@ 0 "" 2
  56              		.thumb
  57              		.syntax unified
  58              	.L2:
  59              	.LBE5:
  60              	.LBE4:
 185:Core/Src/main.c ****   while (1)
  61              		.loc 1 185 3 view .LVU5
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****   }
  62              		.loc 1 187 3 view .LVU6
 185:Core/Src/main.c ****   while (1)
  63              		.loc 1 185 9 view .LVU7
  64 000a FEE7     		b	.L2
  65              	.L5:
  66              		.align	2
  67              	.L4:
ARM GAS  /tmp/ccEI7gWE.s 			page 8


  68 000c 00000000 		.word	.LC0
  69              		.cfi_endproc
  70              	.LFE70:
  72              		.section	.text.SystemClock_Config,"ax",%progbits
  73              		.align	1
  74              		.global	SystemClock_Config
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  79              	SystemClock_Config:
  80              	.LFB69:
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  81              		.loc 1 130 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 88
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85 0000 00B5     		push	{lr}
  86              	.LCFI1:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 14, -4
  89 0002 97B0     		sub	sp, sp, #92
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 96
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  92              		.loc 1 131 3 view .LVU9
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  93              		.loc 1 131 22 is_stmt 0 view .LVU10
  94 0004 2822     		movs	r2, #40
  95 0006 0021     		movs	r1, #0
  96 0008 0CA8     		add	r0, sp, #48
  97 000a FFF7FEFF 		bl	memset
  98              	.LVL1:
 132:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  99              		.loc 1 132 3 is_stmt 1 view .LVU11
 132:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 100              		.loc 1 132 22 is_stmt 0 view .LVU12
 101 000e 0023     		movs	r3, #0
 102 0010 0793     		str	r3, [sp, #28]
 103 0012 0893     		str	r3, [sp, #32]
 104 0014 0993     		str	r3, [sp, #36]
 105 0016 0A93     		str	r3, [sp, #40]
 106 0018 0B93     		str	r3, [sp, #44]
 133:Core/Src/main.c **** 
 107              		.loc 1 133 3 is_stmt 1 view .LVU13
 133:Core/Src/main.c **** 
 108              		.loc 1 133 28 is_stmt 0 view .LVU14
 109 001a 0193     		str	r3, [sp, #4]
 110 001c 0293     		str	r3, [sp, #8]
 111 001e 0393     		str	r3, [sp, #12]
 112 0020 0493     		str	r3, [sp, #16]
 113 0022 0593     		str	r3, [sp, #20]
 114 0024 0693     		str	r3, [sp, #24]
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 115              		.loc 1 138 3 is_stmt 1 view .LVU15
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 116              		.loc 1 138 36 is_stmt 0 view .LVU16
 117 0026 0122     		movs	r2, #1
ARM GAS  /tmp/ccEI7gWE.s 			page 9


 118 0028 0C92     		str	r2, [sp, #48]
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 119              		.loc 1 139 3 is_stmt 1 view .LVU17
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 120              		.loc 1 139 30 is_stmt 0 view .LVU18
 121 002a 4FF48033 		mov	r3, #65536
 122 002e 0D93     		str	r3, [sp, #52]
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 123              		.loc 1 140 3 is_stmt 1 view .LVU19
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 124              		.loc 1 141 3 view .LVU20
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 125              		.loc 1 141 30 is_stmt 0 view .LVU21
 126 0030 1092     		str	r2, [sp, #64]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 127              		.loc 1 142 3 is_stmt 1 view .LVU22
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 128              		.loc 1 142 34 is_stmt 0 view .LVU23
 129 0032 0222     		movs	r2, #2
 130 0034 1392     		str	r2, [sp, #76]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 131              		.loc 1 143 3 is_stmt 1 view .LVU24
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 132              		.loc 1 143 35 is_stmt 0 view .LVU25
 133 0036 1493     		str	r3, [sp, #80]
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 134              		.loc 1 144 3 is_stmt 1 view .LVU26
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135              		.loc 1 144 32 is_stmt 0 view .LVU27
 136 0038 4FF4E013 		mov	r3, #1835008
 137 003c 1593     		str	r3, [sp, #84]
 145:Core/Src/main.c ****   {
 138              		.loc 1 145 3 is_stmt 1 view .LVU28
 145:Core/Src/main.c ****   {
 139              		.loc 1 145 7 is_stmt 0 view .LVU29
 140 003e 0CA8     		add	r0, sp, #48
 141 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 142              	.LVL2:
 145:Core/Src/main.c ****   {
 143              		.loc 1 145 6 discriminator 1 view .LVU30
 144 0044 C0B9     		cbnz	r0, .L11
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 145              		.loc 1 152 3 is_stmt 1 view .LVU31
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 146              		.loc 1 152 31 is_stmt 0 view .LVU32
 147 0046 0F23     		movs	r3, #15
 148 0048 0793     		str	r3, [sp, #28]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149              		.loc 1 154 3 is_stmt 1 view .LVU33
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150              		.loc 1 154 34 is_stmt 0 view .LVU34
 151 004a 0221     		movs	r1, #2
 152 004c 0891     		str	r1, [sp, #32]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 153              		.loc 1 155 3 is_stmt 1 view .LVU35
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 154              		.loc 1 155 35 is_stmt 0 view .LVU36
ARM GAS  /tmp/ccEI7gWE.s 			page 10


 155 004e 0023     		movs	r3, #0
 156 0050 0993     		str	r3, [sp, #36]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 157              		.loc 1 156 3 is_stmt 1 view .LVU37
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158              		.loc 1 156 36 is_stmt 0 view .LVU38
 159 0052 4FF48062 		mov	r2, #1024
 160 0056 0A92     		str	r2, [sp, #40]
 157:Core/Src/main.c **** 
 161              		.loc 1 157 3 is_stmt 1 view .LVU39
 157:Core/Src/main.c **** 
 162              		.loc 1 157 36 is_stmt 0 view .LVU40
 163 0058 0B93     		str	r3, [sp, #44]
 159:Core/Src/main.c ****   {
 164              		.loc 1 159 3 is_stmt 1 view .LVU41
 159:Core/Src/main.c ****   {
 165              		.loc 1 159 7 is_stmt 0 view .LVU42
 166 005a 07A8     		add	r0, sp, #28
 167 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 168              	.LVL3:
 159:Core/Src/main.c ****   {
 169              		.loc 1 159 6 discriminator 1 view .LVU43
 170 0060 60B9     		cbnz	r0, .L12
 163:Core/Src/main.c ****   PeriphClkInit.I2s2ClockSelection = RCC_I2S2CLKSOURCE_SYSCLK;
 171              		.loc 1 163 3 is_stmt 1 view .LVU44
 163:Core/Src/main.c ****   PeriphClkInit.I2s2ClockSelection = RCC_I2S2CLKSOURCE_SYSCLK;
 172              		.loc 1 163 38 is_stmt 0 view .LVU45
 173 0062 0423     		movs	r3, #4
 174 0064 0193     		str	r3, [sp, #4]
 164:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 175              		.loc 1 164 3 is_stmt 1 view .LVU46
 164:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 176              		.loc 1 164 36 is_stmt 0 view .LVU47
 177 0066 0023     		movs	r3, #0
 178 0068 0493     		str	r3, [sp, #16]
 165:Core/Src/main.c ****   {
 179              		.loc 1 165 3 is_stmt 1 view .LVU48
 165:Core/Src/main.c ****   {
 180              		.loc 1 165 7 is_stmt 0 view .LVU49
 181 006a 01A8     		add	r0, sp, #4
 182 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 183              	.LVL4:
 165:Core/Src/main.c ****   {
 184              		.loc 1 165 6 discriminator 1 view .LVU50
 185 0070 30B9     		cbnz	r0, .L13
 169:Core/Src/main.c **** 
 186              		.loc 1 169 1 view .LVU51
 187 0072 17B0     		add	sp, sp, #92
 188              	.LCFI3:
 189              		.cfi_remember_state
 190              		.cfi_def_cfa_offset 4
 191              		@ sp needed
 192 0074 5DF804FB 		ldr	pc, [sp], #4
 193              	.L11:
 194              	.LCFI4:
 195              		.cfi_restore_state
 147:Core/Src/main.c ****   }
ARM GAS  /tmp/ccEI7gWE.s 			page 11


 196              		.loc 1 147 5 is_stmt 1 view .LVU52
 197 0078 FFF7FEFF 		bl	Error_Handler
 198              	.LVL5:
 199              	.L12:
 161:Core/Src/main.c ****   }
 200              		.loc 1 161 5 view .LVU53
 201 007c FFF7FEFF 		bl	Error_Handler
 202              	.LVL6:
 203              	.L13:
 167:Core/Src/main.c ****   }
 204              		.loc 1 167 5 view .LVU54
 205 0080 FFF7FEFF 		bl	Error_Handler
 206              	.LVL7:
 207              		.cfi_endproc
 208              	.LFE69:
 210              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 211              		.align	2
 212              	.LC1:
 213 0000 4D585F46 		.ascii	"MX_FATFS_Init OK\015\000"
 213      41544653 
 213      5F496E69 
 213      74204F4B 
 213      0D00
 214 0012 0000     		.align	2
 215              	.LC2:
 216 0014 665F6D6F 		.ascii	"f_mount failed\015\000"
 216      756E7420 
 216      6661696C 
 216      65640D00 
 217              		.align	2
 218              	.LC3:
 219 0024 303A2F6D 		.ascii	"0:/music\000"
 219      75736963 
 219      00
 220              		.section	.text.main,"ax",%progbits
 221              		.align	1
 222              		.global	main
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	main:
 228              	.LFB68:
  71:Core/Src/main.c **** 
 229              		.loc 1 71 1 view -0
 230              		.cfi_startproc
 231              		@ Volatile: function does not return.
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 239              		.loc 1 74 2 view .LVU56
  81:Core/Src/main.c **** 
 240              		.loc 1 81 3 view .LVU57
ARM GAS  /tmp/ccEI7gWE.s 			page 12


 241 0002 FFF7FEFF 		bl	HAL_Init
 242              	.LVL8:
  88:Core/Src/main.c **** 
 243              		.loc 1 88 3 view .LVU58
 244 0006 FFF7FEFF 		bl	SystemClock_Config
 245              	.LVL9:
  95:Core/Src/main.c ****   MX_DMA_Init();
 246              		.loc 1 95 3 view .LVU59
 247 000a FFF7FEFF 		bl	MX_GPIO_Init
 248              	.LVL10:
  96:Core/Src/main.c ****   MX_SDIO_SD_Init();
 249              		.loc 1 96 3 view .LVU60
 250 000e FFF7FEFF 		bl	MX_DMA_Init
 251              	.LVL11:
  97:Core/Src/main.c ****   MX_USART1_UART_Init();
 252              		.loc 1 97 3 view .LVU61
 253 0012 FFF7FEFF 		bl	MX_SDIO_SD_Init
 254              	.LVL12:
  98:Core/Src/main.c ****   MX_I2S2_Init();
 255              		.loc 1 98 3 view .LVU62
 256 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 257              	.LVL13:
  99:Core/Src/main.c ****   MX_USART2_UART_Init();
 258              		.loc 1 99 3 view .LVU63
 259 001a FFF7FEFF 		bl	MX_I2S2_Init
 260              	.LVL14:
 100:Core/Src/main.c ****   MX_FATFS_Init();
 261              		.loc 1 100 3 view .LVU64
 262 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 263              	.LVL15:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 264              		.loc 1 101 3 view .LVU65
 265 0022 FFF7FEFF 		bl	MX_FATFS_Init
 266              	.LVL16:
 103:Core/Src/main.c **** 		printf("MX_FATFS_Init OK\r\n");
 267              		.loc 1 103 2 view .LVU66
 103:Core/Src/main.c **** 		printf("MX_FATFS_Init OK\r\n");
 268              		.loc 1 103 11 is_stmt 0 view .LVU67
 269 0026 0A4B     		ldr	r3, .L20
 270 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103:Core/Src/main.c **** 		printf("MX_FATFS_Init OK\r\n");
 271              		.loc 1 103 4 view .LVU68
 272 002a 03B1     		cbz	r3, .L19
 273              	.L15:
 116:Core/Src/main.c ****   {
 274              		.loc 1 116 3 is_stmt 1 view .LVU69
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 275              		.loc 1 121 3 view .LVU70
 116:Core/Src/main.c ****   {
 276              		.loc 1 116 9 view .LVU71
 277 002c FEE7     		b	.L15
 278              	.L19:
 104:Core/Src/main.c **** 		if(f_mount(&SDFatFS, (TCHAR const*)SDPath, 0) != FR_OK){
 279              		.loc 1 104 3 view .LVU72
 280 002e 0948     		ldr	r0, .L20+4
 281 0030 FFF7FEFF 		bl	puts
 282              	.LVL17:
ARM GAS  /tmp/ccEI7gWE.s 			page 13


 105:Core/Src/main.c **** 			printf("f_mount failed\r\n");
 283              		.loc 1 105 3 view .LVU73
 105:Core/Src/main.c **** 			printf("f_mount failed\r\n");
 284              		.loc 1 105 6 is_stmt 0 view .LVU74
 285 0034 0022     		movs	r2, #0
 286 0036 0849     		ldr	r1, .L20+8
 287 0038 0848     		ldr	r0, .L20+12
 288 003a FFF7FEFF 		bl	f_mount
 289              	.LVL18:
 105:Core/Src/main.c **** 			printf("f_mount failed\r\n");
 290              		.loc 1 105 5 discriminator 1 view .LVU75
 291 003e 18B1     		cbz	r0, .L16
 106:Core/Src/main.c **** 			while(1);
 292              		.loc 1 106 4 is_stmt 1 view .LVU76
 293 0040 0748     		ldr	r0, .L20+16
 294 0042 FFF7FEFF 		bl	puts
 295              	.LVL19:
 296              	.L17:
 107:Core/Src/main.c **** 		}else{
 297              		.loc 1 107 4 view .LVU77
 107:Core/Src/main.c **** 		}else{
 298              		.loc 1 107 9 view .LVU78
 299 0046 FEE7     		b	.L17
 300              	.L16:
 109:Core/Src/main.c **** 		}
 301              		.loc 1 109 4 view .LVU79
 302 0048 0648     		ldr	r0, .L20+20
 303 004a FFF7FEFF 		bl	ScanWavefiles
 304              	.LVL20:
 305 004e EDE7     		b	.L15
 306              	.L21:
 307              		.align	2
 308              	.L20:
 309 0050 00000000 		.word	retSD
 310 0054 00000000 		.word	.LC1
 311 0058 00000000 		.word	SDPath
 312 005c 00000000 		.word	SDFatFS
 313 0060 14000000 		.word	.LC2
 314 0064 24000000 		.word	.LC3
 315              		.cfi_endproc
 316              	.LFE68:
 318              		.text
 319              	.Letext0:
 320              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 321              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 322              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 323              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 324              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 325              		.file 8 "Middlewares/Third_Party/FatFs/src/integer.h"
 326              		.file 9 "Middlewares/Third_Party/FatFs/src/ff.h"
 327              		.file 10 "Core/Inc/fatfs.h"
 328              		.file 11 "Core/Inc/wave.h"
 329              		.file 12 "Core/Inc/usart.h"
 330              		.file 13 "Core/Inc/i2s.h"
 331              		.file 14 "Core/Inc/sdio.h"
 332              		.file 15 "Core/Inc/dma.h"
 333              		.file 16 "Core/Inc/gpio.h"
ARM GAS  /tmp/ccEI7gWE.s 			page 14


 334              		.file 17 "<built-in>"
 335              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccEI7gWE.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccEI7gWE.s:19     .rodata.Error_Handler.str1.4:00000000 $d
     /tmp/ccEI7gWE.s:23     .text.Error_Handler:00000000 $t
     /tmp/ccEI7gWE.s:29     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccEI7gWE.s:68     .text.Error_Handler:0000000c $d
     /tmp/ccEI7gWE.s:73     .text.SystemClock_Config:00000000 $t
     /tmp/ccEI7gWE.s:79     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccEI7gWE.s:211    .rodata.main.str1.4:00000000 $d
     /tmp/ccEI7gWE.s:221    .text.main:00000000 $t
     /tmp/ccEI7gWE.s:227    .text.main:00000000 main
     /tmp/ccEI7gWE.s:309    .text.main:00000050 $d

UNDEFINED SYMBOLS
puts
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SDIO_SD_Init
MX_USART1_UART_Init
MX_I2S2_Init
MX_USART2_UART_Init
MX_FATFS_Init
f_mount
ScanWavefiles
retSD
SDPath
SDFatFS
