ARM GAS  /tmp/ccR8SKSp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fatfs.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/fatfs.c"
  18              		.section	.text.MX_FATFS_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_FATFS_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_FATFS_Init:
  26              	.LFB65:
   1:Core/Src/fatfs.c **** /* USER CODE BEGIN Header */
   2:Core/Src/fatfs.c **** /**
   3:Core/Src/fatfs.c ****   ******************************************************************************
   4:Core/Src/fatfs.c ****   * @file   fatfs.c
   5:Core/Src/fatfs.c ****   * @brief  Code for fatfs applications
   6:Core/Src/fatfs.c ****   ******************************************************************************
   7:Core/Src/fatfs.c ****   * @attention
   8:Core/Src/fatfs.c ****   *
   9:Core/Src/fatfs.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/fatfs.c ****   * All rights reserved.
  11:Core/Src/fatfs.c ****   *
  12:Core/Src/fatfs.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/fatfs.c ****   * in the root directory of this software component.
  14:Core/Src/fatfs.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/fatfs.c ****   *
  16:Core/Src/fatfs.c ****   ******************************************************************************
  17:Core/Src/fatfs.c ****   */
  18:Core/Src/fatfs.c **** /* USER CODE END Header */
  19:Core/Src/fatfs.c **** #include "fatfs.h"
  20:Core/Src/fatfs.c **** 
  21:Core/Src/fatfs.c **** uint8_t retSD;    /* Return value for SD */
  22:Core/Src/fatfs.c **** char SDPath[4];   /* SD logical drive path */
  23:Core/Src/fatfs.c **** FATFS SDFatFS;    /* File system object for SD logical drive */
  24:Core/Src/fatfs.c **** FIL SDFile;       /* File object for SD */
  25:Core/Src/fatfs.c **** 
  26:Core/Src/fatfs.c **** /* USER CODE BEGIN Variables */
  27:Core/Src/fatfs.c **** 
  28:Core/Src/fatfs.c **** /* USER CODE END Variables */
  29:Core/Src/fatfs.c **** 
  30:Core/Src/fatfs.c **** void MX_FATFS_Init(void)
  31:Core/Src/fatfs.c **** {
  27              		.loc 1 31 1 view -0
ARM GAS  /tmp/ccR8SKSp.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  32:Core/Src/fatfs.c ****   /*## FatFS: Link the SD driver ###########################*/
  33:Core/Src/fatfs.c ****   retSD = FATFS_LinkDriver(&SD_Driver, SDPath);
  36              		.loc 1 33 3 view .LVU1
  37              		.loc 1 33 11 is_stmt 0 view .LVU2
  38 0002 0349     		ldr	r1, .L3
  39 0004 0348     		ldr	r0, .L3+4
  40 0006 FFF7FEFF 		bl	FATFS_LinkDriver
  41              	.LVL0:
  42              		.loc 1 33 9 discriminator 1 view .LVU3
  43 000a 034B     		ldr	r3, .L3+8
  44 000c 1870     		strb	r0, [r3]
  34:Core/Src/fatfs.c **** 
  35:Core/Src/fatfs.c ****   /* USER CODE BEGIN Init */
  36:Core/Src/fatfs.c ****   /* additional user code for init */
  37:Core/Src/fatfs.c ****   /* USER CODE END Init */
  38:Core/Src/fatfs.c **** }
  45              		.loc 1 38 1 view .LVU4
  46 000e 08BD     		pop	{r3, pc}
  47              	.L4:
  48              		.align	2
  49              	.L3:
  50 0010 00000000 		.word	SDPath
  51 0014 00000000 		.word	SD_Driver
  52 0018 00000000 		.word	retSD
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.section	.text.get_fattime,"ax",%progbits
  57              		.align	1
  58              		.global	get_fattime
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	get_fattime:
  64              	.LFB66:
  39:Core/Src/fatfs.c **** 
  40:Core/Src/fatfs.c **** /**
  41:Core/Src/fatfs.c ****   * @brief  Gets Time from RTC
  42:Core/Src/fatfs.c ****   * @param  None
  43:Core/Src/fatfs.c ****   * @retval Time in DWORD
  44:Core/Src/fatfs.c ****   */
  45:Core/Src/fatfs.c **** DWORD get_fattime(void)
  46:Core/Src/fatfs.c **** {
  65              		.loc 1 46 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  47:Core/Src/fatfs.c ****   /* USER CODE BEGIN get_fattime */
  48:Core/Src/fatfs.c ****   return 0;
ARM GAS  /tmp/ccR8SKSp.s 			page 3


  70              		.loc 1 48 3 view .LVU6
  49:Core/Src/fatfs.c ****   /* USER CODE END get_fattime */
  50:Core/Src/fatfs.c **** }
  71              		.loc 1 50 1 is_stmt 0 view .LVU7
  72 0000 0020     		movs	r0, #0
  73 0002 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE66:
  77              		.global	SDFile
  78              		.section	.bss.SDFile,"aw",%nobits
  79              		.align	2
  82              	SDFile:
  83 0000 00000000 		.space	556
  83      00000000 
  83      00000000 
  83      00000000 
  83      00000000 
  84              		.global	SDFatFS
  85              		.section	.bss.SDFatFS,"aw",%nobits
  86              		.align	2
  89              	SDFatFS:
  90 0000 00000000 		.space	560
  90      00000000 
  90      00000000 
  90      00000000 
  90      00000000 
  91              		.global	SDPath
  92              		.section	.bss.SDPath,"aw",%nobits
  93              		.align	2
  96              	SDPath:
  97 0000 00000000 		.space	4
  98              		.global	retSD
  99              		.section	.bss.retSD,"aw",%nobits
 102              	retSD:
 103 0000 00       		.space	1
 104              		.text
 105              	.Letext0:
 106              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 107              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 108              		.file 4 "Middlewares/Third_Party/FatFs/src/integer.h"
 109              		.file 5 "Middlewares/Third_Party/FatFs/src/ff.h"
 110              		.file 6 "Middlewares/Third_Party/FatFs/src/diskio.h"
 111              		.file 7 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 112              		.file 8 "Middlewares/Third_Party/FatFs/src/drivers/sd_diskio.h"
 113              		.file 9 "Core/Inc/fatfs.h"
ARM GAS  /tmp/ccR8SKSp.s 			page 4


DEFINED SYMBOLS
                            *ABS*:00000000 fatfs.c
     /tmp/ccR8SKSp.s:19     .text.MX_FATFS_Init:00000000 $t
     /tmp/ccR8SKSp.s:25     .text.MX_FATFS_Init:00000000 MX_FATFS_Init
     /tmp/ccR8SKSp.s:50     .text.MX_FATFS_Init:00000010 $d
     /tmp/ccR8SKSp.s:96     .bss.SDPath:00000000 SDPath
     /tmp/ccR8SKSp.s:102    .bss.retSD:00000000 retSD
     /tmp/ccR8SKSp.s:57     .text.get_fattime:00000000 $t
     /tmp/ccR8SKSp.s:63     .text.get_fattime:00000000 get_fattime
     /tmp/ccR8SKSp.s:82     .bss.SDFile:00000000 SDFile
     /tmp/ccR8SKSp.s:79     .bss.SDFile:00000000 $d
     /tmp/ccR8SKSp.s:89     .bss.SDFatFS:00000000 SDFatFS
     /tmp/ccR8SKSp.s:86     .bss.SDFatFS:00000000 $d
     /tmp/ccR8SKSp.s:93     .bss.SDPath:00000000 $d
     /tmp/ccR8SKSp.s:103    .bss.retSD:00000000 $d

UNDEFINED SYMBOLS
FATFS_LinkDriver
SD_Driver
